EMU8086 GENERATED LISTING. MACHINE CODE <- SOURCE.
 
noname.exe -- emu8086 assembler version: 4.08  
 
[ 2022/11/27  --  13:54:29 ] 
 
===================================================================================================
[LINE]     LOC: MACHINE CODE                          SOURCE
===================================================================================================
 
[   1]        :                                       ;从键盘接收两个不大于5的十进制数字，并以十进制形式显示其和。
[   2]        :                                       DATA SEGMENT
[   3]    0000: 22                                    X DB '?'
[   4]    0001: 22                                    Y DB '?'
[   5]    0002: 50 4C 45 41 53 45 20 45 4E 54 45 52   STR1 DB 'PLEASE ENTER A NUMBER (0-4):$'
                20 41 20 4E 55 4D 42 45 52 20 28 30 
                2D 34 29 3A 24                      
[   6]        :                                       DATA ENDS
[   7]        :                                       CODE SEGMENT
[   8]        :                                       ASSUME DS:DATA,CS:CODE
[   9]    0020:                                       START:
[  10]        :                                       ; 设置数据段
[  11]    0020: B8 00 00                              MOV AX, DATA
[  12]    0023: 8E D8                                 MOV DS, AX
[  13]        :                                       ;输出提示语句
[  14]    0025: BA 02 00                              LEA DX,STR1
[  15]    0028: B4 09                                 	MOV AH,09H
[  16]    002A: CD 21                                 	INT 21H
[  17]        :                                       ;输入数字
[  18]    002C: B4 01                                 MOV AH,01H
[  19]    002E: CD 21                                 	INT 21H
[  20]        :                                       ;将ASCII进行修正
[  21]    0030: 2C 30                                 SUB AL,30H
[  22]    0032: 8A D8                                 MOV BL,AL
[  23]        :                                       ;换行输出
[  24]    0034: B2 0A                                 	MOV DL,10
[  25]    0036: B4 02                                 	MOV AH,02H
[  26]    0038: CD 21                                 	INT 21H
[  27]        :                                       ;输出提示语句
[  28]    003A: BA 02 00                              LEA DX,STR1
[  29]    003D: B4 09                                 	MOV AH,09H
[  30]    003F: CD 21                                 	INT 21H
[  31]        :                                       ;输入数字
[  32]    0041: B4 01                                 MOV AH,01H
[  33]    0043: CD 21                                 	INT 21H
[  34]        :                                       ;将ASCII进行修正
[  35]    0045: 2C 30                                 SUB AL,30H
[  36]    0047: 8A C8                                 MOV CL,AL
[  37]        :                                       ;进行加法运算
[  38]    0049: 02 CB                                 ADD CL,BL
[  39]        :                                       ;换行输出
[  40]    004B: B2 0A                                 	MOV DL,10
[  41]    004D: B4 02                                 	MOV AH,02H
[  42]    004F: CD 21                                 	INT 21H	
[  43]        :                                       ;变成相应ASCII进行字符输出
[  44]    0051: 80 C1 30                              ADD CL,30H
[  45]    0054: 8A D1                                 MOV DL,CL
[  46]        :                                       
[  47]        :                                       	
[  48]    0056: B4 02                                 MOV AH,02H
[  49]    0058: CD 21                                 INT 21H
[  50]        :                                       
[  51]    005A: B8 00 4C                              MOV AX,4C00H
[  52]    005D: CD 21                                 INT 21H
[  53]        :                                       CODE ENDS
[  54]        :                                       END START
[  55]        :                                       
[  56]        :                                       
 
===================================================================================================
 
EXE HEADER - bytes from 0000 to 01FF inclusive.

0000: 4D      -   exe signature (M)
0001: 5A      -   exe signature (Z)
0002: 5F      -   bytes on last page (l.byte)
0003: 00      -   bytes on last page (h.byte)
0004: 02      -   512 byte pages in file (l.byte)
0005: 00      -   512 byte pages in file (h.byte)
0006: 01      -   relocations (l.byte)
0007: 00      -   relocations (h.byte)
0008: 20      -   paragraphs in header (l.byte)
0009: 00      -   paragraphs in header (h.byte)
000A: 00      -   minimum memory (l.byte)
000B: 00      -   minimum memory (h.byte)
000C: FF      -   maximum memory (l.byte)
000D: FF      -   maximum memory (h.byte)
000E: 00      -   SS - stack segment (l.byte)
000F: 00      -   SS - stack segment (h.byte)
0010: 00      -   SP - stack pointer (l.byte)
0011: 00      -   SP - stack pointer (h.byte)
0012: 21      -   check sum (l.byte)
0013: AC      -   check sum (h.byte)
0014: 00      -   IP - instruction pointer (l.byte)
0015: 00      -   IP - instruction pointer (h.byte)
0016: 02      -   CS - code segment (l.byte)
0017: 00      -   CS - code segment (h.byte)
0018: 1E      -   relocation table adress (l.byte)
0019: 00      -   relocation table adress (h.byte)
001A: 00      -   overlay number (l.byte)
001B: 00      -   overlay number (h.byte)
001C: 01      -   signature (l.byte)
001D: 00      -   signature (h.byte)
001E: 01      -   relocation table - offset inside segment (l.byte)
001F: 00      -   relocation table - offset inside segment (h.byte)
0020: 02      -   relocation table - segment anchor (l.byte)
0021: 00      -   relocation table - segment anchor (h.byte)
0022 to 01FF  -   reserved relocation area  (00) 




===================================================================================================
